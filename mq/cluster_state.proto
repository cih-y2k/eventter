syntax = "proto3";

package io.eventter.mq;

import "client/client.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";

option go_package = "mq";

message ClusterState {
    uint64 index = 1;
    uint64 current_segment_id = 2 [(gogoproto.customname) = "CurrentSegmentID"];
    repeated ClusterNamespace namespaces = 3;
    repeated ClusterSegment open_segments = 4;
    repeated ClusterSegment closed_segments = 5;
    repeated ClusterNode nodes = 6;
}

message ClusterNamespace {
    string name = 1;
    repeated ClusterTopic topics = 2;
    repeated ClusterConsumerGroup consumer_groups = 3;
}

message ClusterTopic {
    string name = 1;
    string type = 2;
    uint32 shards = 3;
    uint32 replication_factor = 4;
    google.protobuf.Duration retention = 5 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];
}

message ClusterConsumerGroup {
    string name = 1;
    repeated Binding bindings = 2;
    message Binding {
        string topic_name = 1;
        oneof by {
            string routing_key = 2;
            google.protobuf.Struct headers_all = 3;
            google.protobuf.Struct headers_any = 4;
        }
    }
    uint32 size = 3;
    repeated OffsetCommit offset_commits = 4;
    message OffsetCommit {
        uint64 segment_id = 1 [(gogoproto.customname) = "SegmentID"];
        int64 offset = 2;
    }
    google.protobuf.Timestamp created_at = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];

}

message ClusterSegment {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    NamespaceName owner = 2 [(gogoproto.nullable) = false];
    Type type = 3;
    enum Type {
        INVALID = 0;
        TOPIC = 1;
        CONSUMER_GROUP_OFFSET_COMMITS = 2;
    }
    google.protobuf.Timestamp created_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    google.protobuf.Timestamp closed_at = 5 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    Nodes nodes = 6 [(gogoproto.nullable) = false];
    message Nodes {
        uint64 primary_node_id = 1 [(gogoproto.customname) = "PrimaryNodeID"];
        repeated uint64 done_node_ids = 2 [(gogoproto.customname) = "DoneNodeIDs"];
        repeated uint64 replicating_node_ids = 3 [(gogoproto.customname) = "ReplicatingNodeIDs"];
    }
    int64 size = 7;
    bytes sha1 = 8;
}

message ClusterNode {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    string address = 2;
    State state = 3;
    enum State {
        DEAD = 0;
        ALIVE = 1;
    }
    google.protobuf.Timestamp last_seen_alive = 4 [(gogoproto.stdtime) = true];
}

message ClusterCommandNamespaceCreate {
    string namespace = 1;
}

message ClusterCommandNamespaceDelete {
    string namespace = 1;
}

message ClusterCommandTopicCreate {
    string namespace = 1;
    ClusterTopic topic = 2;
}

message ClusterCommandTopicDelete {
    string namespace = 1;
    string name = 2;
}

message ClusterCommandConsumerGroupCreate {
    string namespace = 1;
    ClusterConsumerGroup consumer_group = 2;
}

message ClusterCommandConsumerGroupDelete {
    string namespace = 1;
    string name = 2;
}

message ClusterCommandSegmentCreate {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    NamespaceName owner = 2 [(gogoproto.nullable) = false];
    ClusterSegment.Type type = 3;
    google.protobuf.Timestamp opened_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    uint64 primary_node_id = 5 [(gogoproto.customname) = "PrimaryNodeID"];
    repeated uint64 replicating_node_ids = 6 [(gogoproto.customname) = "ReplicatingNodeIDs"];
}

message ClusterCommandSegmentClose {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    uint64 done_node_id = 2 [(gogoproto.customname) = "DoneNodeID"];
    google.protobuf.Timestamp closed_at = 4 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
    int64 size = 5;
    bytes sha1 = 6;
}

message ClusterCommandNodeUpdate {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    string address = 2;
    ClusterNode.State state = 3;
    google.protobuf.Timestamp last_seen_alive = 4 [(gogoproto.stdtime) = true];
}

message ClusterCommandSegmentNodesUpdate {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    Which which = 2;
    enum Which {
        INVALID = 0;
        OPEN = 1;
        CLOSED = 2;
    }
    ClusterSegment.Nodes nodes = 3 [(gogoproto.nullable) = false];
}

message ClusterCommandSegmentDelete {
    uint64 id = 1 [(gogoproto.customname) = "ID"];
    Which which = 2;
    enum Which {
        INVALID = 0;
        OPEN = 1;
        CLOSED = 2;
    }
}

message ClusterCommandConsumerGroupOffsetCommitsUpdate {
    string namespace = 1;
    string name = 2;
    repeated ClusterConsumerGroup.OffsetCommit offset_commits = 3;
}

message ClusterCommand {
    oneof command {
        ClusterCommandNamespaceCreate create_namespace = 10;
        ClusterCommandNamespaceDelete delete_namespace = 11;
        ClusterCommandTopicCreate create_topic = 20;
        ClusterCommandTopicDelete delete_topic = 21;
        ClusterCommandConsumerGroupCreate create_consumer_group = 30;
        ClusterCommandConsumerGroupDelete delete_consumer_group = 31;
        ClusterCommandConsumerGroupOffsetCommitsUpdate update_consumer_group_offset_commits = 32;
        ClusterCommandSegmentCreate create_segment = 40;
        ClusterCommandSegmentDelete delete_segment = 41;
        ClusterCommandSegmentClose close_segment = 42;
        ClusterCommandSegmentNodesUpdate update_segment_nodes = 43;
        ClusterCommandNodeUpdate update_node = 50;
    }
}
